package com.SemRMI;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.rmi.NotBoundException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Timer;

import lpi.server.rmi.IServer;

public class Main 
{

	public static void main(String[] args) throws NotBoundException 
	{
		
		System.out.println("Welcome to simple java console interprate."
		 		 + "Select the appropriate command:\n" 
		 		 + "Press 'ping' to selest the command: ping" 
		 		 + "\nPress 'echo' to selest the command: echo" 
		 		 + "\nPress 'login' to selest the command: login: <login name>, <login password>" 
		 		 + "\nPress 'list' to selest the command: list"
				 + "\nPress 'msg' to selest the command: msg: <name of the msg>, <text of the msg>"
				 + "\nPress 'file' to selest the command: file: <username>, <filename>"
				 + "\nPress 'exit' to selest the command: exit");

		//============

		System.out.println();
		System.out.println("\nEnter the command: ");

		//============
		
				
		try
		{
			
			Registry registry = LocateRegistry.getRegistry("lv.rst.uk.to", 152);
			proxy = (IServer)registry.lookup(IServer.RMI_SERVER_NAME);
			
			String str;
			String arr[];
			
			InputStreamReader isr = new InputStreamReader(System.in);
			BufferedReader reader = new BufferedReader(isr);
			
			Timer timeToReceiveMsg = new Timer();
			boolean isClosed = false;
			boolean isTimerStarted = false;
			//=======
			
			while(!isClosed)
			{
				str = reader.readLine();
				arr = str.split(" ");
				
				switch(arr[0])
				{
					case "ping": 
								try
								{
									 
								}
								catch()
				}
				
			}
			
		}
		catch(IOException exc)
		{
			System.out.println("IOException!!");
		}
		catch(Exception exc)
		{
			System.out.println("Exception!!");
		}
		
		
		
	}
	
	//======> Static values:
	
	static IServer proxy;
	static String sessionID = null;
	
	//======> Static methods:
	
	static String[] partsout(String[] array, int index) 
	{
		String[] result = new String[array.length - index];
		for (int i = index; i < (array.length); i++) 
		{
			result[i - index] = array[i];
		}
		return result;
	}
	
	
	
	//======
}
